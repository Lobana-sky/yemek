{"version":3,"sources":["images/fish.svg","component/header.jsx","component/foodtype.jsx","component/footer.jsx","component/foodtypedetails.jsx","component/resultbtn.jsx","container/home.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","logo","rname","tr","en","ar","className","Container","Row","Col","xm","Image","src","rounded","DropdownButton","id","title","alt","Dropdown","Item","href","Foodtype","img","name","nclass","id1","Footer","fish","Foodtypedetails","price","tags","description","useState","count","setCount","onClick","e","parentNode","document","createElement","setAttribute","body","appendChild","create_detail","map","tag","innerHTML","style","height","opendetails","console","log","target","parentElement","lastChild","showmath","icon","faCoffee","ResultBtn","result","type","Home","headInfo","foodCategories","categoriesInfo","setCategoriesInfo","categoryId","setCategoryId","getCategoriesInfo","a","fetch","response","json","data","foodKind","getElementsByClassName","i","length","addEventListener","preventDefault","current","replace","this","idn","useEffect","undefined","locales","flag","kind","key","detail","md","lg","xl","cover","raw","App","setHeadInfo","setFoodCategories","getHeadInfo","getFoodInfo","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0b34beb2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fish.6de43532.svg\";","import React from 'react';\nimport {Row,Container,Col,Image} from 'react-bootstrap';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport '../App.css';\n\nconst Header=({logo,rname,tr,en,ar}) =>{\n  return (\n    <div className=\"bg-color-header\">\n        <Container>\n            <Row>\n                <Col xm={6} className=\"p-2 d-flex justify-content-start align-items-center\">\n                <Image src={logo} rounded className=\"logo-img\" />\n                <p className=\"restaurant-name align-self-center d-flex mb-0\">{rname}</p>\n                </Col>\n                <Col xm={6} className=\"p-2 d-flex justify-content-end\">\n                <DropdownButton id=\"dropdown-basic-button\" title={<img className=\"lang-img\" src={en} alt=\"en\" />}>\n                    <Dropdown.Item href=\"#/action-1\"><img className=\"lang-img\" src={ar} alt=\"ar\" />Arabic</Dropdown.Item>\n                    <Dropdown.Item href=\"#/action-2\"><img className=\"lang-img\" src={tr} alt=\"tr\"/>Turkish</Dropdown.Item>\n                </DropdownButton>  \n                </Col>\n            </Row>\n        </Container>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport {Image} from 'react-bootstrap';\nimport '../App.css';\n\nconst Foodtype=({img,name,nclass,id,id1})=> {\n  return (\n    <div className={`food-type-component${nclass}`} id={id}>\n        <div className=\"p-0\" id={id1} >\n          <div className=\"divimg\">\n            <Image className=\"food-img\" src={img}/>\n          </div>\n            <p className=\"food-type-text\">{name}</p>\n        </div>\n    </div>\n  );\n}\n\nexport default Foodtype;\n","import React from 'react';\nimport {Image} from 'react-bootstrap';\nimport fish from '../images/fish.svg';\nimport '../App.css';\n\nconst Footer=()=> {\n  return (\n    <div className=\"d-flex justify-content-center\">\n        <Image className=\"footer-img\" src={fish} /> \n    </div>\n  );\n}\n\nexport default Footer;\n","import React, { useState} from 'react';\nimport {Image} from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons';\nimport '../App.css';\n\nfunction showmath(e) {\ne.target.className=\"hidden\";\ne.target.parentElement.lastChild.className=\"d-block\";\n}\n\nfunction opendetails(img,name,tags,description){\n var parentNode = document.createElement('div');\n parentNode.setAttribute(\"id\", \"myfood\");\n parentNode.className=\"overlay\";\n document.body.appendChild(parentNode);\n//  parentNode.style.height=\"0%\";\n//  parentNode.style.transition=\"0.5s\";\n// parentNode=document.getElementById(\"myfood\");\n\n  var create_detail= `<div>\n  <a href='#' class='close-btn d-flex justify-content-center align-self-center' \n  onClick={getElementById('myfood').style.height='0%';document.body.removeChild(getElementById('myfood'));}><span style=\"line-height:1\">&times;</span></a>\n  <div class='overlay-content'>\n    <div class='container content'>\n      <div class='row'>\n        <div class='col-xs-12 col-md-6 p-0'>\n          <img src=${img} class='img-details'/>\n        </div>\n        <div class='col-xs-12 col-md-6'>\n          <p class='title-details'>${name}</p>\n          <div class='mb-3'>\n          <h6 class='text-left'>Ingredients</h6>`;\n\n          tags.map((tag)=> { return create_detail +=`<span class='tag'>${tag}</span>`;\n          })\n\n          create_detail += `</div>\n          <p class='text-left m-1'>${description}</p>\n        </div>\n      </div>\n    </div>\n  </div>`;\n  parentNode.innerHTML=create_detail;\n  parentNode.style.height=\"100%\";\n\n}\n\nconst Foodtypedetails=({img,name,price,tags,description})=> {\nconst [count, setCount] = useState(0); \n\n  return (\n    <div className=\"d-flex justify-content-center\">\n      {/* to make it one block */}\n      <div className=\"food-detail-div\">\n        <Image className=\"food-detail-img\" src={img} \n        onClick={(e)=>{opendetails(img,name,tags,description);console.log(e);}}/> \n        {/* { e } call as a parameter in opendetails() function to make it correspond just for clicking this image */}\n        <div className=\"div-details\">\n          <p className=\"food-detail-name align-self-start\">{name}</p>\n          <p className=\"food-detail-price align-self-end\">${price}</p>\n          <button className=\"sell-btn\" onClick={(e)=>showmath(e)}><FontAwesomeIcon icon={faCoffee} /></button>\n         <div id=\"showpart\" className=\"d-none\">\n          <div className=\"d-flex\">\n            <button className=\"sell-btn-math col\" \n            onClick={() => setCount(count + 1)}\n            >\n              <FontAwesomeIcon icon={faCoffee} /></button>\n            <button className=\"sell-btn-amount col\">\n              {count}\n              </button>\n            <button className=\"sell-btn-math col\" \n            onClick={() => count>0 ? setCount(count - 1): \"\"}\n            >\n              <FontAwesomeIcon icon={faCoffee} /></button>\n          </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Foodtypedetails;\n\n\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCoffee } from '@fortawesome/free-solid-svg-icons';\nimport '../App.css';\n\nconst ResultBtn=({result})=> {\n  return (\n    <div className=\"d-flex justify-content-center\">\n      <button type=\"button\" className=\"result-btn\" \n      // onClick={console.log(\"lobana\")}\n      >\n          <FontAwesomeIcon icon={faCoffee} />\n          <span className=\"p-2 font-weight-bold\">${result}</span>\n      </button>\n    </div>\n  );\n}\n\nexport default ResultBtn;\n","import React,{useState,useEffect} from 'react';\nimport {Row,Container,Col} from 'react-bootstrap';\nimport Header from '../component/header';\nimport Foodtype from '../component/foodtype';\nimport Footer from '../component/footer';\nimport Fooddetail from '../component/foodtypedetails';\nimport ResultBtn from '../component/resultbtn';\nimport '../App.css';\n\nconst Home=({headInfo,foodCategories}) => {\n\nconst [categoriesInfo,setCategoriesInfo]=useState([]);\nconst [categoryId,setCategoryId]=useState(34);\n\nconst getCategoriesInfo = async()=>{\n  const response = \n  await fetch(`https://admin.yemix.net/ar/api/v1/restaurants/5184d88585/categories/${categoryId}/products`);\n  const data = await response.json();\n  setCategoriesInfo(data.data);\n  console.log(categoriesInfo);\n}\n  \n\n\n  var foodKind = document.getElementsByClassName('food-type-component');\n  for (var i = 0; i < foodKind.length; i++) {\n    foodKind[i].addEventListener(\"click\", function(i){\n      i.preventDefault();\n      var current = document.getElementsByClassName(\"active\");\n      current[0].className = current[0].className.replace(\" active\", \"\");\n      this.className += \" active\";\n      var ncurrent = document.getElementsByClassName(\"active\");\n      var idn=ncurrent[0].id;\n      console.log(idn);\n      setCategoryId(idn);\n    });\n  }//end for\n  console.log(categoryId);\n  useEffect(()=>{\n    getCategoriesInfo();\n  },[categoryId]);\n  // [] to run one time \n// only when categoryId is changed it will render again\n\n  return (\n    <div className=\"home-style\">\n      {/* restaurant name + languages */}\n      <Header logo={headInfo.logo} rname={headInfo.title} \n      tr={headInfo.locales!==undefined?headInfo.locales[2].flag:\"\"} ar={headInfo.locales!==undefined?headInfo.locales[0].flag:\"\"}\n      en={headInfo.locales!==undefined?headInfo.locales[1].flag:\"\"}\n      />\n      {/* restaurant name + languages */}  \n      {/* food typs  */}\n      <div id=\"foodtypes\">\n      {foodCategories!==undefined?foodCategories.map((kind,i)=>\n      <a href=\"#/action-5\" key={i}><Foodtype id1={i} id={kind.id} img={kind.icon}\n       name={kind.title} nclass={i===0?\" active\":\"\"}/>\n      </a>):\"\"}\n      </div>\n\n      <Container>\n            <Row>\n            {categoriesInfo!==undefined?categoriesInfo.map((detail,i)=>\n              <Col key={i} xm={12} md={6} lg={4} xl={3} className=\"p-2 d-flex justify-content-center\">\n                <Fooddetail img={detail.cover} name={detail.title} price={detail.price.raw} \n                tags={detail.tag} description={detail.description}/>\n              </Col>):\"\"}\n            </Row>\n        </Container>\n      {/* food type details */}\n<ResultBtn result=\"21\"/>\n<Footer />\n    </div>\n  );\n}\n\nexport default Home;\n\n","import React,{useState,useEffect} from 'react';\nimport Home from './container/home';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nfunction App() {\nconst [headInfo,setHeadInfo]=useState({});\nconst [foodCategories,setFoodCategories]=useState([]);\n\nuseEffect(()=>{\n  getHeadInfo();\n  getFoodInfo();\n  // getCategoriesInfo();\n},[]);\n// [] to run one time \n// only when head Info is changed it will render again\nconst getHeadInfo = async()=>{\n  const response = await fetch('https://admin.yemix.net/ar/api/v1/restaurants/328e69ac91/');\n  const data = await response.json();\n  setHeadInfo(data.data);\n}\n\nconst getFoodInfo = async()=>{\n  const response = await fetch('https://admin.yemix.net/ar/api/v1/restaurants/5184d88585/categories?type=food-category');\n  const data = await response.json();\n  setFoodCategories(data.data);\n}\n\n\n  return (\n    <div className=\"home-style\">\n      <Home headInfo={headInfo} foodCategories={foodCategories} />\n    </div>\n  );\n}\n\nexport default App;\n\n// const getCategoriesInfo = async()=>{\n//   const response = await fetch(`https://admin.yemix.net/ar/api/v1/restaurants/5184d88585/categories/${dId}/products`);\n//   console.log(response);\n//   const data = await response.json();\n//   setCategoriesInfo(data.data);\n// }\n\n//   // var foodKind = document.getElementsByClassName('food-type-component');\n//   for (i = 0; i < foodKind.length; i++) {\n//     foodKind[i].addEventListener(\"click\", function(){\n//       var current = document.getElementsByClassName(\"active\");\n//       current[0].className = current[0].className.replace(\" active\", \"\");\n//       this.className += \" active\";\n//   setDId(document.getElementsByClassName('active')[0].id);\n//   const getCategoriesInfo = async()=>{\n//     const response = await fetch(`https://admin.yemix.net/ar/api/v1/restaurants/5184d88585/categories/${dId}/products`);\n//     console.log(response);\n//     const data = await response.json();\n//     setCategoriesInfo(data.data);\n//   }\n// getCategoriesInfo();\n//     });\n//   }\n\n\n// // const [categoriesInfo,setCategoriesInfo]=useState([]);\n// // const [allCategories,setAllCategories]=useState([]);\n// // var allCategories=[];\n// const [dId,setDId]=useState(5);\n\n// const getAllCategories=async ()=>{\n//   var foodKind = document.getElementsByClassName('food-type-component');\n// setTimeout(async ()=>{\n//   for (var i = 0; i < foodKind.length; i++) {\n//     console.log(i);\n//     const response = \n//     await fetch(`https://admin.yemix.net/ar/api/v1/restaurants/5184d88585/categories/${foodKind[i].id}/products`);\n//     const data = await response.json();\n//    setAllCategories(allCategories.push(data.data));\n//   }//end for\n//     console.log(\"allgetfunc\",allCategories);\n//     // setDId(3);\n// }\n//   ,1000)\n// }\n// console.log(\"allout\",allCategories);\n\n\n// console.log(\"dId\",dId);\n// console.log(\"allCategories[dId]\",allCategories[dId]);\n\n//   const getCategoriesInfo = async(dId)=>{\n    \n//     setCategoriesInfo(allCategories[dId]);\n//     console.log(allCategories);\n//     console.log(categoriesInfo);\n\n//   }\n// useEffect(()=>{\n//   getHeadInfo();\n//   getFoodInfo();\n  \n//   getAllCategories()\n// getCategoriesInfo(dId);\n\n\n//   console.log(allCategories)\n//   // getCategoriesInfo();\n\n// },[]);\n// // [] to run one time \n// // only when head Info is changed it will render again","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}